$celMinWidth: 100px;
$celMinHeight: 40px;

.tableContainer {
  table {
    border-collapse:separate;
    border-spacing: 0;
    width: 100%;

    th,
    td {
      height: $celMinHeight;
      min-width: $celMinWidth;
    }

    th {
      font-weight: bold;
    }
  }

  $border-light-color: #d1d5db; // @apply border-gray-300;

  %extend-light-cell-style1 {
    @apply bg-lightBg text-lightText;
  }

  %extend-light-cell-style2 {
    @apply bg-gray-100 text-lightText;
  }

  & .stickyThRowLast {
    border-bottom: 1px solid $border-light-color;
  }

  & .stickyThColLast {
    border-right: 1px solid $border-light-color;
  }

  &.even {
    tr:nth-child(odd) { td, th { @extend %extend-light-cell-style1; } }

    tr:nth-child(even) { td, th { @extend %extend-light-cell-style2; } }
  }

  &.odd {
    thead {
      tr:nth-child(odd) { td, th { @extend %extend-light-cell-style2; } }

      tr:nth-child(even) { td, th { @extend %extend-light-cell-style1; } }
    }

    tbody {
      tr:nth-child(odd) { td, th { @extend %extend-light-cell-style1; } }

      tr:nth-child(even) { td, th { @extend %extend-light-cell-style2; } }
    }
  }

  &.dark {
    $border-dark-color: rgb(46, 60, 106);

    %extend-dark-cell-style1 {
      @apply text-darkText;

      background-color: rgb(26, 32, 44);
    }

    %extend-dark-cell-style2 {
      @apply text-darkText;

      background-color: rgb(46, 60, 106);
    }

    & .stickyThRowLast {
      border-bottom: 1px solid $border-dark-color;
    }

    & .stickyThColLast {
      border-right: 1px solid $border-dark-color;
    }

    &.even {
      tr:nth-child(odd) { td, th { @extend %extend-dark-cell-style1; } }

      tr:nth-child(even) { td, th { @extend %extend-dark-cell-style2; } }
    }

    &.odd {
      thead {
        tr:nth-child(odd) { td, th { @extend %extend-dark-cell-style2; } }

        tr:nth-child(even) { td, th { @extend %extend-dark-cell-style1; } }
      }

      tbody {
        tr:nth-child(odd) { td, th { @extend %extend-dark-cell-style1; } }

        tr:nth-child(even) { td, th { @extend %extend-dark-cell-style2; } }
      }
    }
  }
}

$colIndex: 1;

@while $colIndex <= 3 {
  .stickyCol#{$colIndex} {
    left: $celMinWidth * ($colIndex - 1);
    position: sticky;
    z-index: 1;
  }

  $colIndex: $colIndex + 1;
}

$rowIndex: 1;

@while $rowIndex <= 3 {
  .stickyRow#{$rowIndex} {
    position: sticky;
    top: $celMinHeight * ($rowIndex - 1); /* 2行目の位置を指定 */
    z-index: 2;

    $RowColIndex: 1;

    @while $RowColIndex <= 3 {
      &.stickyCol#{$RowColIndex} {
        z-index: 3;
      }

      $RowColIndex: $RowColIndex + 1;
    }
  }

  $rowIndex: $rowIndex + 1;
}